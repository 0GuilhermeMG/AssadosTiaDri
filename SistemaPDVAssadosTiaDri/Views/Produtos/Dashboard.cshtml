@using System.Text.Json

@{
    Layout = "_Layout";
    ViewData["Title"] = "Dashboard de Vendas";

    var labels = (List<string>)ViewBag.Labels; // Nomes dos produtos
    var valores = (List<decimal>)ViewBag.Valores; // Valores totais

}

<h1 style="text-align:center;">Fechamento de Caixa</h1>
<div style="margin-left:75px;">
    <label for="dataInicio">Data de início:</label>
    <input type="date" id="dataInicio" class="form-control" />

    <label for="dataFim" class="mt-3">Data de fim:</label>
    <input type="date" id="dataFim" class="form-control" />

    <button id="btnFechamento" class="btn btn-danger mt-3">Fechar Vendas</button>
</div>

<div id="resultadoFechamento" class="mt-3" style="margin-left:75px;"></div>
<h2 id="tituloDeFechamento" style="margin-left:75px; text-align:center;"></h2>
<canvas id="meuGraficoFechamento" width="470" height="250" style="margin-left:75px; height:250px; width:470px; max-height:500px;"></canvas>

<h3 style="text-align:center;">Gráfico Total de Todas as Vendas Existentes</h3>
<canvas id="myChart" width="470" height="250" style="margin-left:75px; height:250px; width:470px; max-height:500px;"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    

    const coresDasBarras = [
        "rgba(255, 99, 132, 0.8) ", "rgba(54, 162, 235, 0.8)",
        "rgba(255, 206, 86, 0.8)", "rgba(75, 192, 192, 0.8)",
        "rgba(153, 102, 255, 0.8)", "rgba(255, 159, 64, 0.8)",
        "rgba(255, 99, 132, 0.8)", "rgba(54, 162, 235, 0.8)",
        "rgba(255, 206, 86, 0.8)", "rgba(75, 192, 192, 0.8)",
        "rgba(153, 102, 255, 0.8)", "rgba(255, 159, 64, 0.8)",
        "rgba(201, 203, 207, 0.8)", "rgba(255, 87, 51, 0.8)",
        "rgba(70, 130, 180, 0.8)", "rgba(100, 149, 237, 0.8)",
        "rgba(144, 238, 144, 0.8)", "rgba(255, 140, 0, 0.8)",
        "rgba(210, 105, 30, 0.8)", "rgba(176, 196, 222, 0.8)",
        "rgba(147, 112, 219, 0.8)", "rgba(255, 215, 0, 0.8)",
        "rgba(106, 90, 205, 0.8)", "rgba(72, 209, 204, 0.8)",
        "rgba(240, 128, 128, 0.8)", "rgba(128, 0, 128, 0.8)",
        "rgba(255, 20, 147, 0.8)", "rgba(255, 69, 0, 0.8)",
        "rgba(0, 255, 127, 0.8)", "rgba(135, 206, 250, 0.8)",
        "rgba(85, 107, 47, 0.8)", "rgba(244, 164, 96, 0.8)",
        "rgba(255, 0, 0, 0.8)", "rgba(0, 0, 255, 0.8)",
        "rgba(34, 139, 34, 0.8)", "rgba(128, 128, 0, 0.8)"
    ];

    const ctx = document.getElementById('myChart').getContext('2d');
    const myChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: @Html.Raw(Json.Serialize(labels)),
            datasets: [{
                label: "Valor Total Vendido R$",
                data: @Html.Raw(Json.Serialize(valores)),
                backgroundColor: coresDasBarras,
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            plugins: {
                legend: {
                    position: 'bottom',
                }
            }
        }
    });

    
    

    // Script de fechamento
    var meuGraficoFechamento;

    document.getElementById("btnFechamento").addEventListener("click", async () => {
        const dataInicio = document.getElementById("dataInicio").value;
        const dataFim = document.getElementById("dataFim").value;

        if (!dataInicio || !dataFim) {
            alert("Por favor, selecione as datas de início e fim.");
            return;
        }

        try {
            const response = await fetch("https://localhost:7261/Produtos/Dashboard/FecharVendas", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    dataInicio,
                    dataFim,
                }),
            });

            if (response.ok) {
                const resultado = await response.json();

                if (resultado.mensagem) {
                    document.getElementById("resultadoFechamento").innerHTML = `<p>${resultado.mensagem}</p>`;
                    return;
                }

                const { valorTotal, detalhes, produtos } = resultado;

                if (!valorTotal || !Array.isArray(detalhes)) {
                    document.getElementById("resultadoFechamento").innerHTML = `<p>Erro: dados inválidos recebidos do servidor.</p>`;
                    return;
                }

                let html = `<h4>Fechamento Concluído</h4>`;
                html += `<p><strong>Total Vendido:</strong> R$ ${valorTotal.toFixed(2)}</p>`;
                html += `<ul>`;
                detalhes.forEach(d => {
                    const id = d.id || "ID não informado";
                    
                    //const data = d.data ? new Date(d.data).toLocaleDateString() : "Data não informada";
                    const valor = d.valorTotal !== undefined ? `R$ ${d.valorTotal.toFixed(2)}` : "Valor não informado";
                    html += `<li><strong>Data: </strong>${d.data}, <strong>Valor:</strong> ${valor}</li>`;    
                });

                html += `<ul>`;
                produtos.forEach(p => {
                    html += `<li><strong>${p.produto}</strong>: R$ ${p.valor.toFixed(2)}</li>`;
                });
                html += `</ul>`
                document.getElementById("resultadoFechamento").innerHTML = html;

               

                document.getElementById("meuGraficoFechamento").innerHTML = html;

                if(meuGraficoFechamento){
                    meuGraficoFechamento.destroy();
                }

                var nomeDosProdutos = produtos.map(p => p.produto);
                var valoresDosProdutos = produtos.map(p => p.valor.toFixed(2));           

               

                const ctxx = document.getElementById('meuGraficoFechamento').getContext('2d');             

                meuGraficoFechamento = new Chart(ctxx, {
                    type: 'bar',
                    data: {
                        labels: nomeDosProdutos,
                        datasets: [{
                            label: "Valor Total Vendido R$",
                            data: valoresDosProdutos,
                            backgroundColor: coresDasBarras,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        plugins: {
                            legend: {
                                position: 'bottom',
                            }
                        }
                    }
                });

                

            } else {
                alert("Erro ao realizar o fechamento.");
            }
        } catch (err) {
            console.error(err);
            alert("Erro ao se comunicar com o servidor.");
        }
    });

    



</script>
